<div class="base">
    <div class="base-box" style="display:flex; justify-content: center; align-items: center">
        <form action="" class="form" style="width: 80%;">
            <label>
                <span>Тестирование</span>
                <select name="test" id="test">
                    <option value="0" selected>Выберите тест</option>
                    {% for test in tests %}
                        <option id="select_{{ test.test_id }}" year="{{ test.year_id }}"
                                subject="{{ test.subject_code }}" value="{{ test.test_id }}"> {{ test.year }}
                            - {{ test.subject }}</option>
                    {% endfor %}
                </select>
            </label>
        </form>

    </div>
    <div class="rating-box mx-1 mt-1" id="cards">

    </div>

    <div class="el-content my-2">

    </div>
</div>

{% block js %}
    <script>
        const testsElement = $('#test');
        testsElement.on('change', function () {
            if (testsElement.val() != 0) {
                getParticipants(testsElement.val()).then(function (res) {
                    if (res.length > 0) {
                        res.map(function (x) {
                            $('#cards').append(renderName(x));
                            setHandler(x);
                            let elem = $(`#select_${testsElement.val()}`);
                            getTest(elem.attr('year'), elem.attr('subject'), x.code).then(function (result) {
                                $(`#accord_${x.code}`).append(`<div class="accordion-content" id="${x.code}"> ${result} </div>`);
                                setBlockHadnlers();
                            })
                        });
                    } else {
                        $('#cards').html('<h4>Ничего не найдено</h4>')
                    }
                })
            } else {
                $('#cards').html('');
            }
        });

        function setBlockHadnlers() {
            $('.element.ready').each(function () {
                $(this).on('click', function () {
                    let particip = $(this).parent().parent().attr('id');
                    let id = $(this).attr('id');
                    getSubElements(id).then(res => {
                        $('.el-content').html(res).after(() => setInputHandlers(id, particip));
                    })
                });
            });
        }

        function renderName(x) {
            return `<div class="accordion name my-1" id="accord_${x.code}">
                    <div class="accordion-name" id="block_${x.code}">
                        <p class="small font-weight-normal text-uppercase lts-2px"
                           style="cursor: pointer;"><b>${x.surname} ${x.name} ${x.secondname}</b>
                        </p>
                    </div>

                </div>`
        }


        function setInputHandlers(id, particip) {
            $('.ballsTeacher').each(function () {
                let min = parseInt($(this).attr('min'));
                let max = parseInt($(this).attr('max'));
                $(this).inputFilter(function (value) {
                    console.log(parseInt(value));
                    return /^\d*$/.test(value) && (value === "" || (parseInt(value) <= max));
                });
            });
            $('#sub_elements').on('submit', function (e) {
                e.preventDefault();
                let elements = {};
                $('.ballsTeacher').each(function () {
                    elements = {...elements, [$(this).attr('element')]: $(this).val()};
                });
                $.ajax({
                    type: "POST",
                    url: `${baseUrl}/tests/save/${id}`,
                    data: {
                        user: particip,
                        elements: elements
                    }
                }).fail((jqXHR, textStatus) => {
                    $(this).html(badModal(`Ошибка ${jqXHR.status} ${jqXHR.responseText}`)).after(() => $('#circle').css('visibility', 'visible'));
                    setTimeout(() => clearElems(), 1300);
                }).done(res => {
                    $(this).html(okModal("Данные успешно сохранены")).after(() => $('#circle').css('position', 'relative').css('visibility', 'visible'));
                    setTimeout(() => clearElems(), 1300);
                });
            });
        }

        function clearElems() {
            $('.el-content').html('');
        }

        function setHandler(x) {
            $(`#block_${x.code}`).on('click', function (e) {
                e.preventDefault();
                $(this).closest('.accordion').toggleClass('active');
                $(this).closest('.accordion').find('.accordion-content').stop().slideToggle(500);
            })
        }
    </script>
{% endblock %}
